// Code generated by Wire. DO NOT EDIT.

//go:generate go run github.com/google/wire/cmd/wire
//go:build !wireinject
// +build !wireinject

package di

import (
	"github.com/BIC-Final-Project/backend/configs/env"
	"github.com/BIC-Final-Project/backend/internal/asset/http/handler"
	"github.com/BIC-Final-Project/backend/internal/asset/repository"
	"github.com/BIC-Final-Project/backend/internal/asset/usecase"
	"github.com/BIC-Final-Project/backend/internal/storage"
	"go.mongodb.org/mongo-driver/mongo"
)

// Injectors from wire.go:

func InitAset(db *mongo.Database, env2 env.EnvVars) *handler.AsetHandler {
	asetRepository := repository.NewAsetRepository(db)
	s3Service := storage.NewS3Service(env2)
	asetUsecase := usecase.NewAsetUsecase(asetRepository, s3Service)
	asetHandler := handler.NewAsetHandler(asetUsecase)
	return asetHandler
}

func InitVendor(db *mongo.Database, env2 env.EnvVars) *handler.VendorHandler {
	vendorRepository := repository.NewVendorRepository(db)
	vendorUsecase := usecase.NewVendorUsecase(vendorRepository)
	vendorHandler := handler.NewVendorHandler(vendorUsecase)
	return vendorHandler
}

func InitPerencanaan(db *mongo.Database, env2 env.EnvVars) *handler.PerencanaanHandler {
	perencanaanRepository := repository.NewPerencanaanRepository(db)
	perencanaanUsecase := usecase.NewPerencanaanUsecase(perencanaanRepository)
	perencanaanHandler := handler.NewPerencanaanHandler(perencanaanUsecase)
	return perencanaanHandler
}

func InitPemeliharaan(db *mongo.Database, env2 env.EnvVars) *handler.PemeliharaanHandler {
	pemeliharaanRepository := repository.NewPemeliharaanRepository(db)
	pemeliharaanUsecase := usecase.NewPemeliharaanUsecase(pemeliharaanRepository)
	pemeliharaanHandler := handler.NewPemeliharaanHandler(pemeliharaanUsecase)
	return pemeliharaanHandler
}
